name: Release

on:
  workflow_run:
    workflows: ["Pipeline"]
    types:
      - completed

env:
  IMAGE_NAME: foai_backend

jobs:
  tag:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'master'

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "latest"

      - name: Init empty package.json
        run: npm init -y

      - name: Install semantic-release with plugins
        run: npm install --save-dev semantic-release @semantic-release/git @semantic-release/exec

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  publish:
    name: Publish to Azure Container Registry
    runs-on: ubuntu-latest
    needs: tag

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch updated release commit
        run: |
          git fetch origin master
          git reset --hard origin/master

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Use version from file
        run: echo "VERSION=$(cat version)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
